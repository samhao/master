dbWriteTable(con, "BOD", BOD)
dbGetQuery(con, "select * from BOD")
dbDisconnect(con)
con <- dbConnect(H2(), "jdbc:h2:~/test", "sa", "")
# create table, populate it and display it
s <- 'create table tt("id" int primary key, "name" varchar(255))'
dbSendUpdate(con, s)
dbSendUpdate(con, "insert into tt values(1, 'Hello')")
dbSendUpdate(con, "insert into tt values(2, 'World')")
dbGetQuery(con, "select * from tt")
# transfer a data frame to H2 and then display it from the database
dbWriteTable(con, "BOD", BOD)
dbGetQuery(con, "select * from BOD")
dbGetQuery(con, "select * from tt")
res <- dbGetQuery(con, "select * from tt")
class(res)
dbSendUpdate(con, "replace into tt values(1, 'Hello')")
dbSendUpdate(con, "insert or replace into tt values(1, 'Hello')")
dbSendUpdate(con, "merge into tt key (id) values(1, 'Hello')")
res <- dbGetQuery(con, "select * from tt")
res
dbSendUpdate(con, "merge into tt values(1, 'Hello')")
res <- dbGetQuery(con, "select * from tt")
res
dbSendUpdate(con, "merge into tt values(3, 'Hello Hello')")
res <- dbGetQuery(con, "select * from tt")
res
res <- dbGetQuery(con, "DATEADD('MONTH', 1, DATE '2001-01-31')")
res <- dbGetQuery(con, "select DATEADD('MONTH', 1, DATE '2001-01-31')")
res
(res <- dbGetQuery(con, "select MONTHNAME(CREATED)"))
(res <- dbGetQuery(con, "select MONTHNAME(CURRENT_DATE)"))
(res <- dbGetQuery(con, "select DAYNAME(CURRENT_DATE)"))
search()
ls(3)
dbGetTables(con)
?dbGetTables
dbGetTables(con, 'BOD')
dbGetTables(con, 'tt')
dbGetTables(con, tt)
dbGetTables(con, 'select * from tt;')
dbListTables(con)
cat(dbListTables(con))
cbind (cat(dbListTables(con)), 1:30)
cbind dbListTables(con), 1:30)
cbind (dbListTables(con), 1:30)
cat(cbind (dbListTables(con), 1:30))
tbl <- dbListTables(con)
id <- 1: nrow(tbl)
id <- 1: nrows(tbl)
id <- 1: nrow(tbl)
tbl
class tbl
class (tbl)
id <- 1: length(tbl)
res <- data.frame(id, tbl)
res
tbl <- dbGetTables(con)
tbl <- dbGetTables(con, 'tt')
search()
ls(4)
ls(11)
ls(14)
search()
ls(15)
ls(16)
ls(15)
dir
ls()
EnVar
EnvVar
search()
ls(15)
?environment
Sys.getenv()
Sys.getenv('windir')
Sys.getenv('username')
Sys.getlocale()
Sys.localeconv()
Sys.info()
Sys.unsetenv
dir()
search()
require(zoo)
ls(2)
?as.Date.numeric
x <- as.yearmon(2000 + seq(0, 23)/12)
x
as.Date(x)
Y <- as.yearmon(x)
y
Y
as.Date(x, frac = 1)
x
as.Date(x, frac=0.5)
as.Date(x, frac=0.25)
as.Date(x, frac=0.75)
x
as.numeric(x)
seq_along(x)
xx <- zoo(seq_along(x), x)
xx
ls(2)
?yearmon_trans
res
con
con <- dbConnect(H2(), 'jdbc:h2:~test')
dbListTables(con)
ls()
dim(f)
rm(f, id, res, s, tbl, x, xx, Y)
ls()
search()
ls(12)
sapply(ls(12), dim)
sapply(ls(12), dim)
sapply(ls(12), dim)
class(ls(12))
as.data.frame(ls(12))
data.frame(ls(12))
td <- data.frame(date = c(as.Date('1970-1-1'), as.Date('1971-1-2')))
td
td <- data.frame(td, count = c(2, 10), desc = c('first', 'second'))
td
getwd()
dir(pattern='csv$')
write.csv(td, 'testoutfile2.csv')
write.csv(td, 'testoutfile2.csv', row.names = F)
in <- read.csv('testoutfile2.csv')
ifile <- read.csv('testoutfile2.csv')
ifile
str(ifile)
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',')
ifile
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T)
ifile
str(ifile)
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T, colClasses=c('Date', 'int', 'character'))
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T, colClasses=c('Date', 'integer', 'character'))
ifile
str(ifile)
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T, colClasses=c('Date', 'integer', 'factor'))
str(ifile)
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T, colClasses=c('Date', 'integer', 'Factor'))
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T, colClasses=c('Date', 'integer', 'factor'))
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T, colClasses=c('Date', 'integer', 'Factor'))
ifile <- read.table('testoutfile2.csv', stringsAsFactors=F, sep=',', header=T, colClasses=c('Date', 'integer', 'factor'))
ifile
write.table(ifile, file='testoutfile3.csv', sep='\t', na='', row.names=F)
ifile <- read.table('testoutfile3.csv', stringsAsFactors=F, sep='\t', header=T, colClasses=c('Date', 'integer', 'Factor'))
ifile <- read.table('testoutfile3.csv', stringsAsFactors=F, sep='\t', header=T, colClasses=c('Date', 'integer', 'factor'))
ifile
con
dbListTables(con)
dbGetQuery(con, 'select * from csvread("testoutfile3.csv")')
dbGetQuery(con, 'select * from csvread("testoutfile3.csv")')
getwd()
dbGetQuery(con, 'select * from csvread(paste0(getwd(), "testoutfile3.csv")')
getwd()
dbGetQuery(con, 'select * from csvread("C:/Users/s1/Documents/testoutfile3.csv")')
dbGetQuery(con, 'select * from csvread("C:/Users/s1/Documents/testoutfile3.csv");')
con
dbGetQuery(con, 'select * from CSVREAD("testoutfile3.csv")')
dbGetQuery(con, 'select * from CSVREAD("testoutfile2.csv")')
dbGetQuery(con, 'select * from CSVREAD("testoutfile2.csv")', NULL, 'FieldSep=","')
dbGetQuery(con, 'select * from CSVREAD("testoutfile2.csv")', NULL, 'fieldSeparator=","')
dbListTables(con)
dbGetQuery(con, 'select * from CSVREAD("testoutfile2.csv")', NULL, 'fieldSeparator=","')
dbGetQuery(con, 'select * from CSVREAD("testoutfile2.csv")', NULL, 'fieldSeparator=","')
dbGetQuery(con, 'select * from CSVREAD("testoutfile2.csv", NULL, 'fieldSeparator=","')
dbGetQuery(con, 'select * from CSVREAD("testoutfile2.csv");')
sql <- 'select * from csvread("testoutfile2.csv);'
sql
sql <- 'select * from csvread("testoutfile2.csv");'
sql
sql <- 'select * from csvread("testoutfile2.csv", null);'
dbGetQuery(con, sql)
ifile
write.csv (ifile, 'testout.csv', row.names=F)
sql <- 'select * from csvread("testout.csv");'
dbGetQuery(con, sql)
sql <- 'select * from csvread("~/testout.csv");'
dbGetQuery(con, sql)
sql <- 'select * from CSVREAD("~/testout.csv");'
dbGetQuery(con, sql)
getwd()
sql <- 'select * from CSVREAD("C:/Users/s1/Documents/testout.csv");'
dbGetQuery(con, sql)
dbGetQuery(con, sql)
sql <- 'select date from CSVREAD("C:/Users/s1/Documents/testout.csv");'
dbGetQuery(con, sql)
sql
ifile
names(ifile) = 'i' & names(ifile)
names(ifile) = paste0('i',  names(ifile))
ifile
write.csv(ifile, 'ifile.csv')
sql <- 'select * from CSVREAD("C:/Users/s1/Documents/ifile.csv");'
dbGetQuery(con, sql)
dbWriteTable(con, name='ifile', ifile)
dbGetQuery(con, 'select * from ifile')
str(ifile)
f2 <- read.csv('ifile.csv')
f2
f2 <- read.csv('ifile.csv', row.names = F)
f2 <- read.csv('ifile.csv', row.names = 1)
f2
str(f2)
ls()
con
con <- dbConnect(H2(), 'jdbc:h2:~/test')
getwd()
dir()
dir(pattern='csv$')
idential(getwd(), dirname('.'))
identical(getwd(), dirname('.'))
dirname('.')
dirname(path='.')
dirname(,path='.')
dirname(path='.')
getwd()
dbWriteTable(con, 'ifile', ifile)
dbGetQuery(con, 'select * from ifile;')
dbSendUpdate(con, 'delete from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbSendUpdate(con, 'insert into ifile as select *  from csvread("ifile.csv");"
)
);
zGrigor Dimitrov\
'
''
dbSendUpdate(con, 'insert into ifile as select *  from csvread("ifile.csv");')
dbSendUpdate(con, 'insert into ifile select *  from csvread("ifile.csv");')
ifile
write.csv(ifile, 'ifile.csv', row.names=F)
dbSendUpdate(con, 'insert into ifile select *  from csvread("ifile.csv");')
dbSendUpdate(con, 'drop table ifile')
dbSendUpdate(con, 'create table ifile select *  from csvread("ifile.csv");')
dbSendUpdate(con, 'create table ifile as select *  from csvread("ifile.csv");')
search()
dbListTables(con)
dbSendUpdate(con, 'create table ifile as select *  from csvread("ifile.csv")')
dbSendUpdate(con, "create table ifile as select *  from csvread('ifile.csv'')")
dbSendUpdate(con, "create table ifile as select *  from csvread('ifile.csv')")
dbListFields(con, name='ifile')
dbListFields(con, name='ifile')
dbListConnections(con)
dbListConnections(H2())
dbGetFields(con, name='ifile')
dbGetFields(con, 'ifile')
dbGetFields(con)
dbDisconnect(con)
q()
sql <- "CREATE CACHED TABLE PUBLIC.ifile(
IDATE Date,
ICOUNT integer,
IDESC VARCHAR
)"
sql
con <- dbConnect(H2(), 'jdbc:h2:~/test')
con
dbSendUpdate(con, 'drop table ifile;')
dbSendUpdate(con, sql)
dbSendUpdate(con, "insert into ifile select * from csvread('ifile.csv')")
dbGetQuery(con, 'select * from ifile')
res <- dbGetQuery(con, 'select * from ifile')
res
str(res)
sql
dbSendUpdate(con, "delete from ifile;")
dbSendUpdate(con, "insert into ifile select * from csvread('ifile.csv')")
res <- dbGetQuery(con, 'select * from ifile')
res
dbSendUpdate(con, "delete from ifile;")
dbSendUpdate(con, "insert into ifile select * from csvread('ifile.csv')")
res <- dbGetQuery(con, 'select * from ifile')
res
dbSendUpdate(con, "delete from ifile;")
dbWriteTable(con, name = 'ifile', value='ifile.csv', row.names=F)
res <- dbGetQuery(con, 'select * from ifile')
str(res)
dbSendUpdate(con, "delete from ifile;")
dbWriteTable(con, name = 'ifile', value='ifile.csv', row.names=F, header=T)
res <- dbGetQuery(con, 'select * from ifile')
res
getwd()
dir(pattern='csv$')
dbSendUpdate(con, "delete from ifile;")
dbSendUpdate(con, "create table ifile (idate Date, icount integer, idesc varchar) as select * from csvread('ifile.csv');")
dbSendUpdate(con, "delete from ifile;")
dbSendUpdate(con, "create table ifile (idate Date, icount integer, idesc varchar) as select * from csvread('ifile.csv');")
dbSendUpdate(con, "drop table ifile;")
dbSendUpdate(con, "create table ifile (idate Date, icount integer, idesc varchar) as select * from csvread('ifile.csv');")
dbDisconnect(con)
q()
F2
f2
con <- dbConnect(H2(), 'jdbc:h2:~test')
dbListTables(con)
dbGetQuery(con, select * from ifile;'')
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'drop table ifile;')
dbSendUpdate(con, 'drop table ifile;')
dbSendUpdate(con, 'create table ifile (idate Date, icount integer, idesc varchar);')
dbSendUpdate(con, "insert into ifile select * from csvread('ifile.csv');")
res <- dbGetQuery(con, 'select * from ifile;')
str(res)
dbSendUpdate(con, "update ifile set icount = NULL where icount = 0;")
res <- dbGetQuery(con, 'select * from ifile;')
res
dbSendUpdate(con, "update ifile set icount NULL where icount = 0;")
dbSendUpdate(con, "update ifile set icount = NULL where icount = 0;")
res <- dbGetQuery(con, 'select * from ifile;')
res
dbSendUpdate(con, "update ifile set idesc = NULL where icount = 0;")
res <- dbGetQuery(con, 'select * from ifile;')
res
res <- dbGetQuery(con, 'commit;')
dbSendUpdate(con, "commit;")
res <- dbGetQuery(con, 'select * from ifile;')
res
q()
con
con <- dbConnect(H2(), 'jdbc:h2:ssl://localhost:8085/~/test')
con <- dbConnect(H2(), 'jdbc:h2:tcp://localhost/~/test')
dbWriteTable(con, name='ifile', ifile)
dbListTables(con)
con <- dbConnect(H2(), 'jdbc:h2:tcp://localhost/~/test')
con <- dbConnect(H2(), 'jdbc:h2:tcp://localhost/~/test;IGNORECASE=TRUE')
dbSendUpdate(con, 'drop table if exist ifile;')
dbSendUpdate(con, 'drop table if exists ifile;')
dbWriteTable(con, 'ifile', ifile)
ifile
dbWriteTable(con, name='ifile', value=ifile)
dbWriteTable(con, name='IFILE', value=ifile)
dbWriteTable(con, 'ifile', ifile)
dbSendUpdate(con, 'drop table if exists IFILE;')
dbWriteTable(con, name='IFILE', value=ifile)
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select idate, icount, idesc from ifile;')
names(ifile)
names(ifile) = toupper(names(ifile))
dbWriteTable(con, name='IFILE', value=ifile)
dbGetQuery(con, 'select idate, icount, idesc from ifile;')
View(`f2`)
View(ifile)
View(`f2`)
dbGetQuery(con, 'select idate, icount, idesc from IFILE;')
dbGetQuery(con, 'UPDATE IFILE SET ICOUNT = NULL WHERE ICOUNT = 10;')
dbSendUpdate(con, 'UPDATE IFILE SET ICOUNT = NULL WHERE ICOUNT = 10;')
dbGetQuery(con, 'select idate, icount, idesc from IFILE;')
res <- dbGetQuery(con, 'select idate, icount, idesc from IFILE;')
str(res)
search()
ls(3)
getwd()
require(RH2)
unloadNamespace(RH2)
rm (RH2)
q(save=F)
require(SQLite)
require(RSQLite)
search()
ls(2)
dbConnect(SQLite(), 'test.sqlite')
dbListTables(con)
con <- dbConnect(SQLite(), 'test.sqlite')
dbListTables(con)
dbWriteTable(con, name = 'ifile', values = 'ifile.csv')
dbWriteTable(con, name = 'ifile', values = 'ifile.csv')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv')
dbListTables(con)
dbGetQuery(con, 'select * from ifile;')
dbSendQuery(con, 'drop table ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T)
dbGetQuery(con, 'select * from ifile;')
?dbWriteTable,SQLiteConnection,character,character-method
?dbWriteTable
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, append = T)
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T)
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T)
?read.table
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', flush=T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', flush=T)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', flush=T)
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
dbGetQuery(con, 'select * from ifile;')
?read.table
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', quote = "\"")
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', quote = "\"", na.strings = "NA")
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', quote = "\"", na.strings = NA)
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', quote = "\"", na.strings = 'NA')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', quote = "\"", eol='\r')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', quote = "\"", eol='\n')
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = ifile)
ifile <- read.table('ifile.csv')
ifile <- read.table('ifile.csv', sep=',')
dbWriteTable(con, name = 'ifile', value = ifile)
dbWriteTable(con, name = 'ifile', value = ifile, overwrite=T)
dbGetQuery(con, 'select * from ifile;')
ifile <- read.table('ifile.csv', sep=',', header=T)
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',')
dbGetQuery(con, 'select * from ifile;')
write.table(ifile, eol='\r\n', row.names=F, sep='')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',')
dbGetQuery(con, 'select * from ifile;')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',', eol='\r\n')
dbWriteTable(con, name = 'ifile', value = 'ifile.csv', header=T, overwrite = T, sep=',')
dbGetQuery(con, 'select * from ifile;')
dbWriteTable
showMethods('dbWriteTable')
search()
ls(3)
?DBI::dbWriteTable
dir
dir(
)
file.show('t1.xls')
file.show('ifile.csv')
browseURL('www.nytimes.com')
getOption('browser')
user.prompt()
install.packages('Zelig')
require(Zelig)
search()
ls(2)
user.prompt()
q()
ls()
con
search()
dir()
ifile
?barplot
?table
source('~/.active-rstudio-document', echo=TRUE)
View(ames)
?se
source('~/.active-rstudio-document', echo=TRUE)
View(gss)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(sgss)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
table(data$partyid)
mosaicplot(table(data$helppoor, data$partyid))
mosaicplot(table(data$partyid, data$helppoor))
source('~/.active-rstudio-document', echo=TRUE)
mosaicplot(plotdata, main='Servey', xlab='Party affiliation')
source('~/.active-rstudio-document', echo=TRUE)
fix(plotdata)
plotdata
View(sgss_helppoor)
sgss_helppoor <- subset (sgss, !is.na(sgss$helppoor, row.names=F))
sgss_helppoor <- subset (sgss, !is.na(sgss$helppoor),  row.names=F)
View(sgss_helppoor)
View(data)
head(data, 100)
source('~/.active-rstudio-document', echo=TRUE)
head(data, 100, row.names=F)
dim(data)
View(data)
class(data)
table(gss$partyid)/sum(gss$partyid)
table(gss$partyid)/nrow(gss)
round(table(gss$partyid) * 100 /nrow(gss), 2)
round(table(gss$partyid) * 100 /nrow(gss), 2)
round(table(data$partyid)) * 100 /nrow(data), 2)
round(table(data$partyid) * 100 /nrow(data), 2)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("~/R.Programming/RR")
setwd("~/R.Programming/RR/master")
